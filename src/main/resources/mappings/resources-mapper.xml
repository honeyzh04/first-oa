<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.first.mapper.ResourcesMapper">
	<!--mybatis ehcache缓存配置 -->
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 <cache type="org.mybatis.caches.ehcache.LoggingEhcache" 
		/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->

	<sql id="selectId">
		id ,
		resName name,
		parentId ,
		(select r.resName from ogresources r where r.id = ogresources.parentId )
		parentName,
		resKey,
		type,
		resUrl,
		level,
		icon,
		ishide,
		createDate,
		description
	</sql>
	<!-- 查找下级菜单 -->
	<select id="findChildlists" resultType="com.first.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		from ogresources
		where parentid = #{id}
	</select>
	
	<!-- 查找用户可见菜单 -->

		<select id="findMenu" parameterType="String" resultType="com.first.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		from ogresources 
		where type in(1,2)  
		 ORDER BY level  
		</select>
		
	<!-- 获取该用户的权限 -->
	<select id="findRes" parameterType="String" resultType="com.first.entity.ResFormMap">
			 SELECT 
		 sres.* 
		 from 
		  oguser su,oguser_role sur,ogrole sr,ogrole_res srr,ogresources sres 
		  WHERE 
		  su.id=#{userId}
		  and su.id=sur.userId and 
		  sr.id=sur.roleId AND 
		  srr.roleId=sr.id and 
		  srr.resId=sres.id  
		<if test="parentId != null and parentId != '' and parentId != 0">
			and sres.parentId = #{parentId}
		</if> 
		
		<!--  order by level asc -->
	</select>
	
	<!-- 获取角色权限 -->
	<select id="findRoleRes" parameterType="String" resultType="com.first.entity.ResFormMap">
		SELECT
		<include refid="selectId" />
		from ogresources
		where id in (
		select resId from
		ogrole_res where 1=1 
		<if test="roleId != null and roleId != '' and roleId != 0">
		and roleId in (
		      SELECT id from ogrole where id = #{roleId}
		   )
		</if>
		)
	</select>	
	<!-- 根据账号Id获取该用户的权限 -->
	<select id="findUserResourcess" parameterType="String"
		resultType="com.first.entity.ResFormMap">
			 SELECT 
		 sres.* 
		 from 
		  oguser su,oguser_role sur,ogrole sr,ogrole_res srr,ogresources sres 
		  WHERE 
		  su.id=#{userId}
		  and su.id=sur.userId and 
		  sr.id=sur.roleId AND 
		  srr.roleId=sr.id and 
		  srr.resId=sres.id  
	</select>
	
	<update id="updateSortOrder" parameterType="java.util.List">
          <foreach collection="list" item="item" index="index" open="" close="" separator=";">
                update ogResources
                <set>
                  level = #{item.level}
                </set>
                where resId = #{item.id}
         </foreach>
	</update>
	
	
	<!-- 删 -->
	<delete id="deleteResourcesRole" parameterType="String">
		delete from
		ly_res_roles
		where role_id=#{id}
	</delete>

	<insert id="addRoleRes">
		insert into ly_res_roles (role_id,resc_id) value (#{roleId},#{resId})
	</insert>

	<!-- 用户查询 -->
	<select id="findByNames" resultType="java.util.HashMap">
		select * fromogResources where 
		1=1
		 order by level asc
	</select>
	
	<!-- 查询数据库字段 -->
	<select id="initTableField" resultType="java.util.HashMap">
		select TABLE_NAME,group_concat(COLUMN_NAME) COLUMN_NAME 
		from information_schema.columns 
		where table_name in (${table_name}) and table_schema in (${database_name})  GROUP BY TABLE_NAME
	</select>
	<!-- 权限配置 -->
	<select id="findByWhere" resultType="com.first.entity.ResFormMap">
		select 
		<include refid="selectId" />
		 from  ogresources  
		
	</select>
	<select id="findByAll" resultType="java.util.HashMap">
		select * from ogresources  
		
	</select>
	
		<!-- 删 -->
	<delete id="deleteByAttribute" >
		<!-- delete from
		ly_res_roles
		where role_id=#{id} -->
	</delete>
</mapper>